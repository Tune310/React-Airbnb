{"ast":null,"code":"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nexport let instanceCount = 0;\nexport function incrementInstanceCount() {\n  instanceCount++;\n}\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {!Array<!PolymerElementConstructor>}\n */\n\nexport const registrations = [];\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @private\n */\n\nfunction _regLog(prototype) {\n  console.log('[' +\n  /** @type {?} */\n  prototype.is + ']: registered');\n}\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {!PolymerElementConstructor} prototype Element prototype to register\n * @protected\n */\n\n\nexport function register(prototype) {\n  registrations.push(prototype);\n}\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n */\n\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}","map":null,"metadata":{},"sourceType":"module"}